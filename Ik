// BANCO DE DADOS
  CREATE TABLE USUARIO( ID INT PRIMARY KEY IDENTIFY(1,1), USUARIO_REDE VARCHAR(15) NOT NULL, EMAIL VARCHAR(50) NOT NULL, MATRICULA CHAR(6) NOT NULL, NOME VARCHAR(100) NOT NULL, STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)), CREATED_AT DATETIME DEFAULT GETDATE() ); CREATE TABLE CI_ROUTE( ID INT PRIMARY KEY IDENTITY(1,1), ROTA VARCHAR(30) NOT NULL, ALIAS VARCHAR(15) NOT NULL, STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)), VUID CHAR(32) NOT NULL, CREATED_AT DATETIME DEFAULT GETDATE() ); CREATE TABLE MENU( ID INT PRIMARY KEY IDENTITY(1,1), CI_ROUTE_ID INT NOT NULL, FOREIGN KEY (CI_ROUTE_ID) REFERENCES CI_ROUTE(ID), MENU_PAI_ID INT, FOREIGN KEY (MENU_PAI_ID) REFERENCES MENU(ID), MENU VARCHAR(20) NOT NULL, CREATED_AT DATETIME DEFAULT GETDATE(), STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)), ICON_CLASS CHAR(20) NOT NULL, SLUG VARCHAR(20) NOT NULL, ORDEM_EXIBICAO INT NOT NULL ); CREATE TABLE MODULOS( ID INT PRIMARY KEY IDENTITY(1,1), MENU_ID INT NOT NULL, FOREIGN KEY (MENU_ID) REFERENCES MENU(ID), MODULO VARCHAR(20) NOT NULL, CREATED_AT DATETIME DEFAULT GETDATE(), STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)) ); CREATE TABLE PERFIL( ID INT PRIMARY KEY IDENTITY(1,1), PERFIL VARCHAR(15) NOT NULL, STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)), CREATED_AT DATETIME DEFAULT GETDATE() ); CREATE TABLE PERFIL_MODULO( ID INT PRIMARY KEY IDENTITY(1,1), PERFIL_ID INT NOT NULL, FOREIGN KEY (PERFIL_ID) REFERENCES PERFIL(ID), MODULO_ID INT NOT NULL, FOREIGN KEY(MODULO_ID) REFERENCES MODULOS(ID), VUID CHAR(32) NOT NULL, STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)), CREATED_AT DATETIME DEFAULT GETDATE() ); CREATE TABLE USUARIO_PERFIL( ID INT PRIMARY KEY IDENTITY(1,1), USUARIO_ID INT NOT NULL, FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID), PERFIL_ID INT NOT NULL, FOREIGN KEY(PERFIL_ID) REFERENCES PERFIL(ID), STATUS BIT NOT NULL CHECK (STATUS IN (0, 1)), CREATED_AT DATETIME DEFAULT GETDATE() ); CREATE TABLE LOG_ACESSO( ID INT PRIMARY KEY IDENTITY(1,1), USUARIO_ID INT, FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID), USUARIO VARCHAR(30), ERRO VARCHAR(200) NOT NULL, COD_HTTP CHAR(3) NOT NULL, CREATED_AT DATETIME DEFAULT GETDATE() );


// INSERIR

INSERT INTO USUARIO (USUARIO_REDE, EMAIL, MATRICULA, NOME, STATUS)
VALUES ('user123', 'user123@email.com', '123456', 'João da Silva', 1);

INSERT INTO CI_ROUTE (ROTA, ALIAS, STATUS, VUID)
VALUES ('/rota1', 'alias1', 1, 'abc123def456ghi789jkl012mno345pq');


INSERT INTO MENU (CI_ROUTE_ID, MENU_PAI_ID, MENU, STATUS, ICON_CLASS, SLUG, ORDEM_EXIBICAO)
VALUES (1, NULL, 'Menu Principal', 1, 'icon-home', 'menu-principal', 1);


INSERT INTO MODULOS (MENU_ID, MODULO, STATUS)
VALUES (1, 'Módulo Principal', 1);

INSERT INTO PERFIL (PERFIL, STATUS)
VALUES (1, 1);


INSERT INTO PERFIL_MODULO (PERFIL_ID, MODULO_ID, VUID, STATUS)
VALUES (1, 1, 'xyz987uvw654rst321qpo098nml765', 1);

INSERT INTO USUARIO_PERFIL (USUARIO_ID, PERFIL_ID, STATUS)
VALUES (1, 1, 1);

INSERT INTO LOG_ACESSO (USUARIO_ID, USUARIO, ERRO, COD_HTTP)
VALUES (1, 'João da Silva', 'Nenhum erro', '200');



//SEM STATUS
CREATE VIEW permissions_view AS
SELECT
    U.USUARIO_REDE,
    P.ID AS IdPerfil,
    P.PERFIL AS NomePerfil,
    CI.ID AS IdCI,
    CI.ROTA,
    CI.ALIAS,
    M.ID AS IdMenu,
    M.MENU AS NomeMenu,
    M.MENU_PAI_ID,
    M.ICON_CLASS,
    M.SLUG,
    M.ORDEM_EXIBICAO
FROM
    USUARIO_PERFIL UP
INNER JOIN
    USUARIO U ON UP.USUARIO_ID = U.ID
INNER JOIN
    PERFIL P ON UP.PERFIL_ID = P.ID
INNER JOIN
    PERFIL_MODULO PM ON P.ID = PM.PERFIL_ID
INNER JOIN
    MODULOS MO ON PM.MODULO_ID = MO.ID
INNER JOIN
    MENU M ON MO.MENU_ID = M.ID
INNER JOIN
    CI_ROUTE CI ON M.CI_ROUTE_ID = CI.ID
 WHERE U.EMAIL 


// COM O STATUS
SELECT
    U.USUARIO_REDE,
    P.ID AS IdPerfil,
    P.PERFIL AS NomePerfil,
    P.STATUS AS StatusPerfil,
    CI.ID AS IdCI,
    CI.ROTA,
    CI.ALIAS,
    CI.STATUS AS StatusCI,
    M.ID AS IdMenu,
    M.MENU AS NomeMenu,
    M.MENU_PAI_ID,
    M.STATUS AS StatusMenu,
    M.ICON_CLASS,
    M.SLUG,
    M.ORDEM_EXIBICAO
FROM
    USUARIO_PERFIL UP
INNER JOIN
    USUARIO U ON UP.USUARIO_ID = U.ID
INNER JOIN
    PERFIL P ON UP.PERFIL_ID = P.ID
INNER JOIN
    PERFIL_MODULO PM ON P.ID = PM.PERFIL_ID
INNER JOIN
    MODULOS MO ON PM.MODULO_ID = MO.ID
INNER JOIN
    MENU M ON MO.MENU_ID = M.ID
INNER JOIN
    CI_ROUTE CI ON M.CI_ROUTE_ID = CI.ID
WHERE
    UP.STATUS = 1;


// TESTE

-- Inserir dados na tabela PERFIL
INSERT INTO PERFIL (PERFIL, STATUS) VALUES
(1, 1), -- Perfil 1: Administrador
(2, 1), -- Perfil 2: Usuário Padrão
(3, 1); -- Perfil 3: Convidado

-- Inserir dados na tabela USUARIO
INSERT INTO USUARIO (USUARIO_REDE, EMAIL, MATRICULA, NOME, STATUS) VALUES
('admin123', 'admin123@email.com', '000001', 'Administrador', 1),
('user123', 'user123@email.com', '000002', 'Usuário Padrão', 1),
('guest123', 'guest123@email.com', '000003', 'Convidado', 1);

-- Inserir dados na tabela MODULOS
INSERT INTO MODULOS (MENU_ID, MODULO, STATUS) VALUES
(1, 'Usuário', 1),
(2, 'Cliente', 1),
(3, 'Perfil', 1),
(4, 'Categoria', 1);

-- Inserir dados na tabela PERFIL_MODULO
INSERT INTO PERFIL_MODULO (PERFIL_ID, MODULO_ID, VUID, STATUS) VALUES
(1, 2, 'vuid123', 1), -- Perfil 1 (Administrador) tem acesso ao módulo Usuário
(1, 3, 'vuid124', 1), -- Perfil 1 (Administrador) tem acesso ao módulo Cliente
(1, 4, 'vuid125', 1), -- Perfil 1 (Administrador) tem acesso ao módulo Perfil
(1, 5, 'vuid126', 1), -- Perfil 1 (Administrador) tem acesso ao módulo Categoria
(2, 2, 'vuid127', 1), -- Perfil 2 (Usuário Padrão) tem acesso ao módulo Usuário
(2, 3, 'vuid128', 1), -- Perfil 2 (Usuário Padrão) tem acesso ao módulo Cliente
(3, 4, 'vuid129', 1); -- Perfil 3 (Convidado) tem acesso ao módulo Perfil

SELECT * FROM MODULOS
-- Inserir dados na tabela PERFIL_USUARIO
INSERT INTO USUARIO_PERFIL (USUARIO_ID, PERFIL_ID, STATUS) VALUES
(1, 1, 1), -- Usuário 1 (Administrador) tem o perfil de Administrador
(2, 2, 1), -- Usuário 2 (Usuário Padrão) tem o perfil de Usuário Padrão
(3, 3, 1); -- Usuário 3 (Convidado) tem o perfil de Convidado


-- Inserir as rotas correspondentes
INSERT INTO CI_ROUTE (ROTA, ALIAS, STATUS, VUID) VALUES
('/usuario', 'menu_usuario', 1, 'menu_usuario_vuid'),
('/cliente', 'menu_cliente', 1, 'menu_cliente_vuid'),
('/perfil', 'menu_perfil', 1, 'menu_perfil_vuid'),
('/categoria', 'menu_categoria', 1, 'menu_categoria_vuid');

-- Inserir o menu "Usuário" e seus submenus
INSERT INTO MENU (CI_ROUTE_ID, MENU_PAI_ID, MENU, STATUS, ICON_CLASS, SLUG, ORDEM_EXIBICAO) VALUES
(1, NULL, 'Usuário', 1, 'icon-user', 'usuario', 1), -- Menu principal "Usuário"
(1, 1, 'Listar', 1, 'icon-list', 'usuario-listar', 1),
(1, 1, 'Cadastrar', 1, 'icon-plus', 'usuario-cadastrar', 2),
(1, 1, 'Editar', 1, 'icon-pencil', 'usuario-editar', 3),
(1, 1, 'Excluir', 1, 'icon-trash', 'usuario-excluir', 4),
(1, 1, 'Permissão e Acesso', 1, 'icon-lock', 'usuario-permissao-acesso', 5);

-- Inserir o menu "Cliente" e seus submenus
INSERT INTO MENU (CI_ROUTE_ID, MENU_PAI_ID, MENU, STATUS, ICON_CLASS, SLUG, ORDEM_EXIBICAO) VALUES
(2, NULL, 'Cliente', 1, 'icon-users', 'cliente', 1), -- Menu principal "Cliente"
(2, 7, 'Listar', 1, 'icon-list', 'cliente-listar', 1),
(2, 7, 'Inserir', 1, 'icon-plus', 'cliente-inserir', 2),
(2, 7, 'Excluir', 1, 'icon-trash', 'cliente-excluir', 3),
(2, 7, 'Editar', 1, 'icon-pencil', 'cliente-editar', 4);

-- Inserir o menu "Perfil" e seus submenus
INSERT INTO MENU (CI_ROUTE_ID, MENU_PAI_ID, MENU, STATUS, ICON_CLASS, SLUG, ORDEM_EXIBICAO) VALUES
(3, NULL, 'Perfil', 1, 'icon-profile', 'perfil', 1), -- Menu principal "Perfil"
(3, 12, 'Listar', 1, 'icon-list', 'perfil-listar', 1),
(3, 12, 'Inserir', 1, 'icon-plus', 'perfil-inserir', 2),
(3, 12, 'Excluir', 1, 'icon-trash', 'perfil-excluir', 3),
(3, 12, 'Editar', 1, 'icon-pencil', 'perfil-editar', 4);

-- Inserir o menu "Categoria" e seus submenus
INSERT INTO MENU (CI_ROUTE_ID, MENU_PAI_ID, MENU, STATUS, ICON_CLASS, SLUG, ORDEM_EXIBICAO) VALUES
(4, NULL, 'Categoria', 1, 'icon-category', 'categoria', 1), -- Menu principal "Categoria"
(4, 18, 'Listar', 1, 'icon-list', 'categoria-listar', 1),
(4, 18, 'Inserir', 1, 'icon-plus', 'categoria-inserir', 2),
(4, 18, 'Excluir', 1, 'icon-trash', 'categoria-excluir', 3),
(4, 18, 'Editar', 1, 'icon-pencil', 'categoria-editar', 4);


//
DECLARE @UserId INT = (SELECT ID FROM USUARIO WHERE EMAIL = 'admin123@email.com');

-- Tabela temporária para armazenar o menu
CREATE TABLE #Menu (
    ID INT,
    MENU NVARCHAR(100),
    MENU_PAI_ID INT,
    ICON_CLASS NVARCHAR(50),
    SLUG NVARCHAR(50),
    ORDEM_EXIBICAO INT
);

-- Consulta para obter os dados do menu com base nas permissões do usuário
WITH MenuCTE AS (
    SELECT
        M.ID,
        M.MENU,
        M.MENU_PAI_ID,
        M.ICON_CLASS,
        M.SLUG,
        M.ORDEM_EXIBICAO
    FROM
        USUARIO_PERFIL UP
    INNER JOIN
        USUARIO U ON UP.USUARIO_ID = U.ID
    INNER JOIN
        PERFIL P ON UP.PERFIL_ID = P.ID
    INNER JOIN
        PERFIL_MODULO PM ON P.ID = PM.PERFIL_ID
    INNER JOIN
        MODULOS MO ON PM.MODULO_ID = MO.ID
    INNER JOIN
        MENU M ON MO.MENU_ID = M.ID
    INNER JOIN
        CI_ROUTE CI ON M.CI_ROUTE_ID = CI.ID
    WHERE
        U.ID = @UserId
)

-- Inserir os dados do menu na tabela temporária
INSERT INTO #Menu (ID, MENU, MENU_PAI_ID, ICON_CLASS, SLUG, ORDEM_EXIBICAO)
SELECT
    ID,
    MENU,
    MENU_PAI_ID,
    ICON_CLASS,
    SLUG,
    ORDEM_EXIBICAO
FROM
    MenuCTE
ORDER BY
    ORDEM_EXIBICAO;

-- Cursor para percorrer os resultados e construir o menu
DECLARE @MenuId INT, @Menu NVARCHAR(100), @MenuPaiId INT, @IconClass NVARCHAR(50), @Slug NVARCHAR(50), @OrdemExibicao INT;

DECLARE MenuCursor CURSOR FOR
SELECT
    ID,
    MENU,
    MENU_PAI_ID,
    ICON_CLASS,
    SLUG,
    ORDEM_EXIBICAO
FROM
    #Menu;

OPEN MenuCursor;
FETCH NEXT FROM MenuCursor INTO @MenuId, @Menu, @MenuPaiId, @IconClass, @Slug, @OrdemExibicao;

WHILE @@FETCH_STATUS = 0
BEGIN
    -- Construa o menu aqui usando os valores recuperados
    PRINT 'ID: ' + CONVERT(NVARCHAR(10), @MenuId) + ', MENU: ' + @Menu + ', MENU_PAI_ID: ' + CONVERT(NVARCHAR(10), @MenuPaiId) + ', ICON_CLASS: ' + @IconClass + ', SLUG: ' + @Slug + ', ORDEM_EXIBICAO: ' + CONVERT(NVARCHAR(10), @OrdemExibicao);

    FETCH NEXT FROM MenuCursor INTO @MenuId, @Menu, @MenuPaiId, @IconClass, @Slug, @OrdemExibicao;
END

CLOSE MenuCursor;
DEALLOCATE MenuCursor;

-- Limpar tabela temporária
DROP TABLE #Menu;



///USUARIO-REDE IDUSUARIO STATUS, NOME PERFIL E STATUS, IDMODULO MODULO STATUS E MENUID
CREATE VIEW vw_dados_usuario AS
SELECT
    U.USUARIO_REDE,
    U.ID AS IDUSUARIO,
    U.STATUS AS STATUS_USUARIO,
    P.ID AS IDPERFIL,
    P.PERFIL AS NOME_PERFIL,
    P.STATUS AS STATUS_PERFIL,
    MO.ID AS IDMODULO,
    MO.MODULO AS MODULO,
    MO.STATUS AS STATUS_MODULO,
    M.ID AS MENUID
FROM
    USUARIO U
INNER JOIN
    USUARIO_PERFIL UP ON U.ID = UP.USUARIO_ID
INNER JOIN
    PERFIL P ON UP.PERFIL_ID = P.ID
INNER JOIN
    PERFIL_MODULO PM ON P.ID = PM.PERFIL_ID
INNER JOIN
    MODULOS MO ON PM.MODULO_ID = MO.ID
INNER JOIN
    MENU M ON MO.MENU_ID = M.ID;
