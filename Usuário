import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";
import Button from "react-bootstrap/Button";
import axios from "axios";

function CadastrarUsuario() {
  const [show, setShow] = useState(false);
  const [usuarioRede, setUsuarioRede] = useState("");
  const [nome, setNome] = useState("");
  const [email, setEmail] = useState("");
  const [status, setStatus] = useState("1");

  const handleSubmit = async () => {
    // Aqui você pode enviar os dados para a API ou fazer o que for necessário com os dados inseridos
    const novoUsuario = {
      usuario_rede: usuarioRede,
      nome: nome,
      email: email,
      status: status
    };
    console.log("Novo usuário:", novoUsuario);
const response = await axios.post("http://localhost/salvar_usuario.php", novoUsuario);
    // Após enviar os dados, você pode fechar o modal
    handleClose();
  };

  const handleBlurUsuarioRede = async () => {
    if (usuarioRede.trim() === "") {
      // Limpa os campos se o usuário_rede estiver vazio
      setNome("");
      setEmail("");
      setStatus("1"); // Reset para o valor padrão de Ativo (1)
      return;
    }

    try {
      // Faz a requisição para obter os dados do usuário com base no usuario_rede
      const response = await axios.get(`http://localhost:8080/1`);
      const usuarioEncontrado = response.data; // Supondo que a resposta da API retorne um único usuário

      if (usuarioEncontrado) {
        setNome(usuarioEncontrado.nome);
        setEmail(usuarioEncontrado.email);
        setStatus(usuarioEncontrado.status);
      } else {
        // Caso o usuário não seja encontrado, você pode tratar aqui
        console.log("Usuário não encontrado");
        setNome("");
        setEmail("");
        setStatus("1"); // Reset para o valor padrão de Ativo (1)
      }
    } catch (error) {
      console.error("Erro ao buscar usuário:", error);
      // Caso ocorra algum erro na requisição, você pode tratar aqui
      setNome("");
      setEmail("");
      setStatus("1"); // Reset para o valor padrão de Ativo (1)
    }
  };

  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  return (
    <>
      <div onClick={handleShow}>
        <a className="btn btn-primary btn-sm" role="button" aria-controls="offcanvasExample">
          Adicionar Novo Usuário
        </a>
      </div>
      <Modal show={show} onHide={handleClose}>
        <Modal.Header closeButton>
          <Modal.Title className="modal-title fs-5">Editar Usuário</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <form>
            <div className="row">
              <div className="col-xl-12">
                <label className="form-label">
                  Usuário Rede <span className="text-danger">*</span>
                </label>
                <input
                  type="text"
                  className="form-control"
                  placeholder="Nome de usuário na rede"
                  value={usuarioRede}
                  onChange={(e) => setUsuarioRede(e.target.value)}
                  onBlur={handleBlurUsuarioRede} // Chama a função quando o campo perde o foco
                  required
                />
                <label className="form-label mt-3">
                  Nome <span className="text-danger">*</span>
                </label>
                <input
                  type="text"
                  className="form-control"
                  placeholder="Nome Completo"
                  value={nome}
                  onChange={(e) => setNome(e.target.value)}
                  required
                />
                <label className="form-label mt-3">
                  Email <span className="text-danger">*</span>
                </label>
                <input
                  type="email"
                  className="form-control"
                  placeholder="exemplo@dominio.com"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                />
                <div className="row">
                  <div className="col-xl-6">
                    <label className="form-label mt-3">
                      Status <span className="text-danger">*</span>
                    </label>
                    <select
                      className="form-select"
                      value={status}
                      onChange={(e) => setStatus(e.target.value)}
                      required
                    >
                      <option value="0">Inativo</option>
                      <option value="1">Ativo</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleClose}>
            Fechar
          </Button>
          <Button variant="primary" onClick={handleSubmit}>
            Salvar
          </Button>
        </Modal.Footer>
      </Modal>
    </>
  );
}

export default CadastrarUsuario;



import { useState } from 'react';
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';

function EditarUsuario({ dado }) {
    const [show, setShow] = useState(false);

    const handleClose = () => setShow(false);
    const handleShow = () => setShow(true);
    const handleSubmit = () => { };
    return (
        <>
            <div onClick={handleShow}>
                <a href="#" class="btn btn-primary shadow btn-xs sharp me-1"><i class="fas fa-pencil-alt"></i></a>
            </div>

            <Modal show={show} onHide={handleClose}>
                <Modal.Header closeButton>
                    <h1 class="modal-title fs-5" id="exampleModalLabel1">Editar Usuário</h1>
                </Modal.Header>
                <Modal.Body>
                    <form>
                        <div class="row">
                            <div class="col-xl-12">
                                <label class="form-label">
                                    Nome
                                    <span class="text-danger">*</span>
                                </label>
                                <input
                                    type="nome"
                                    class="form-control"
                                    placeholder="Nome Completo"
                                    value={dado.nome}
                                    required
                                />
                                <label class="form-label mt-3">
                                    Email<span class="text-danger">*</span>
                                </label>
                                <div class="react-datepicker-wrapper">
                                    <div class="react-datepicker__input-container ">
                                        <input
                                            type="email"
                                            class="form-control"
                                            value={dado.email}
                                            required
                                        />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xl-6">
                                        <label class="form-label mt-3">
                                            Profissao<span class="text-danger">*</span>
                                        </label>
                                        <div class="input-group">
                                            <input
                                                type="text"
                                                class="form-control"
                                                value={dado.profissao}
                                                required
                                            />
                                        </div>
                                    </div>
                                    <div class="col-xl-6">
                                        <label class="form-label mt-3">
                                            Telefone
                                            <span class="text-danger">*</span>
                                        </label>
                                        <div class="input-group">
                                            <input
                                                type="tel"
                                                class="form-control"
                                                value={dado.telefone}
                                                placeholder="(XXX) XXXXX-XXXX"
                                            />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </Modal.Body>
                <Modal.Footer>
                    <Button variant="secondary" onClick={handleClose}>
                        Close
                    </Button>
                    <Button variant="primary" onClick={handleSubmit}>
                        Save Changes
                    </Button>
                </Modal.Footer>
            </Modal>
        </>
    );
}

export default EditarUsuario;



import React, { useRef, useEffect } from 'react';
import { initDataTable, destroyDataTable } from '../../utils/bootstrap-table';
import Usuario from '../../assets/json/db.json';
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';
import CadastrarUsuario from './Cadastrar';
import EditarUsuario from './Editar';
import ExcluirUsuario from './Excluir';

const ListarUsuario = () => {
  const tableRef = useRef(null);

  useEffect(() => {
    initDataTable(tableRef);
    return () => {
      destroyDataTable(tableRef);
    };
  }, []);

  return (
    <div className="col-xl-12">
      <div className="card dz-card" id="accordion-three">
        <div className="card-header flex-wrap d-flex justify-content-between">
          <div>
            <h4 className="card-title">Usuários</h4>
          </div>
          <CadastrarUsuario />
        </div>
        <div className="tab-content" id="myTabContent-2">
          <div
            className="tab-pane fade show active"
            id="withoutSpace"
            role="tabpanel"
            aria-labelledby="home-tab-2"
          >
            <div className="card-body pt-0">
              <div className="table-responsive">
                <table
                  ref={tableRef}
                  id="example3"
                  className="display table"
                  style={{ minWidth: 845 }}
                >
                  <thead>
                    <tr>
                      <th>ID</th>
                      <th>Usuário Rede</th>
                      <th>Nome</th>
                      <th>Email</th>
                      <th>Status</th>
                      <th>Ações</th>
                    </tr>
                  </thead>
                  <tbody>
                    {Usuario.map((item, index) => (
                      <tr key={item.id}>
                        <td>{item.id}</td>
                        <td>{item.usuario_rede}</td>
                        <td>{item.nome}</td>
                        <td>{item.email}</td>
                        <td>{item.status}</td>
                        <td>
                          <div class="d-flex">
                            <EditarUsuario dado={item}/>
                            <ExcluirUsuario id={item.id}/>
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ListarUsuario;



import Swal from "sweetalert2";
import Api from "../../Services/Api";
function ExcluirUsuario({ id }) {
    const delete_usuario = () => {
        Swal.fire({
            title: 'Tem certeza que deseja excluir o usuario?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sim',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                // Api.post('', id);
            }
        });
    }
    return (
        <div onClick={delete_usuario}>
            <a  class="btn btn-danger shadow btn-xs sharp"><i class="fa fa-trash"></i></a>
        </div>
    )
}

export default ExcluirUsuario;


///endpoint <?php
// Verifica se o método da requisição é POST
if ($_SERVER["REQUEST_METHOD"] === "POST") {
    // Recebe os dados enviados via POST
    $usuarioRede = $_POST["usuario_rede"];
    $nome = $_POST["nome"];
    $email = $_POST["email"];
    $status = $_POST["status"];

    // Aqui você pode fazer o que quiser com os dados recebidos, como salvar em um banco de dados
    // Exemplo: salvar em um arquivo de texto
    $dadosUsuario = "Usuário Rede: " . $usuarioRede . "\n";
    $dadosUsuario .= "Nome: " . $nome . "\n";
    $dadosUsuario .= "Email: " . $email . "\n";
    $dadosUsuario .= "Status: " . $status . "\n";

    $file = fopen("usuarios.txt", "a"); // Abre o arquivo para escrita (append)
    fwrite($file, $dadosUsuario); // Escreve os dados no arquivo
    fclose($file); // Fecha o arquivo

    // Resposta para o Axios (JSON neste caso)
    echo json_encode(["message" => "Usuário cadastrado com sucesso"]);
} else {
    // Se não for POST, retorna um erro ou outra mensagem apropriada
    echo json_encode(["error" => "Método não permitido"]);
}
?>
