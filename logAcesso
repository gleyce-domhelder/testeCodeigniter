  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" crossorigin="anonymous" />


<?php

namespace App\Filters;

use App\Models\Log_Acesso;
use CodeIgniter\Filters\FilterInterface;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;

class LogAcesso implements FilterInterface
{
    private $session;

    public function __construct()
    {
        $this->session = \Config\Services::session();
    }

    public function before(RequestInterface $request, $arguments = null)
    {
        // Executa antes da execução do método do controlador
    }

    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)
    {
        $id_usuario = $this->session->get('ID_USUARIO');
        $email = $this->session->get('USUARIO_REDE');

        $log = new Log_Acesso();

        $currentStatusCode = $response->getStatusCode();
        $statusCodeTexts = [
            200 => 'OK',
            404 => 'Not Found',
            500 => 'Internal Server Error',
            // Adicione outros códigos de status conforme necessário
        ];
        $errorMessage = isset($statusCodeTexts[$currentStatusCode]) ? $statusCodeTexts[$currentStatusCode] : '';


        // ...
        $log->insert([
            'USUARIO_ID' => $id_usuario,
            'USUARIO' => $email,
            'ERRO' => $errorMessage,
            'COD_HTTP' => $currentStatusCode,
            'AGENTSERVER' => $request->getServer('HTTP_USER_AGENT'),
            'IP_CONFIG' => $request->getServer('REMOTE_ADDR'),
            'CREATED_AT' => date('d-m-Y H:i:s'),
        ]);
    }
}


<?php

namespace App\Controllers;

use App\Models\Usuario;
use App\Models\Usuario_Perfil;
use App\Libraries\Autenticar;
use App\Libraries\Hash;
use Exception;

class Acesso extends BaseController
{
    public function login()
    {
        session()->destroy();
        if ($this->request->getMethod() !== 'post') {
            // Filtra e valida os dados do formulário
            $usuario = new Usuario();
            $userInfo = $usuario->where('USUARIO_REDE', 'adm')->first();
            // $checkPassword = Hash::make($this->request->getPost('password'), $userInfo['password']);
            $id_usuario = $userInfo['ID'];
            session()->set('USUARIO_REDE', 'adm');
            session()->set('ID_USUARIO', $id_usuario);
            if (!$id_usuario) {
                return redirect()->to('http://localhost:3000/login')->setStatusCode(401, 'O email não cadastrado ou Credenciais Inválidas!!');
            }
            return Autenticar::setAutenticar($userInfo);
            // return redirect()->to('./listarPermissoesUsuario/' . $id_usuario);
            
        } else {
            return 404;
        }
    }

}



//Tables 
npm install jquery
npm install datatables.net-bs5
import React, { useRef } from 'react';
import { initDataTable, destroyDataTable } from '../../utils/bootstrap-table'
import Clientes from '../../json/Clientes.json';
import { useState } from 'react';
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';

const ListarClientes = () => {

  const [show, setShow] = useState(false);

  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);
  const tableRef = useRef(null);
  React.useEffect(() => {
    initDataTable(tableRef);
    return () => {
      destroyDataTable(tableRef);
    };
  }, []);

  return (
    <div className="container-fluid">
      <div className="row">
        <div className="col-xl-12">
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">Listagem de Clientes</h4>
              <div>
                <button onClick={handleShow} type="button" class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModal1">
                  Cadastro de Novo Cliente
                </button>
              </div>
            </div>
            <div className="card-body">
              <div className="table-responsive">
                <table ref={tableRef} id="example" className="table table-striped table-bordered">
                  <thead>
                    <tr>
                      <th>ID</th>
                      <th>Nome</th>
                      <th>Email</th>
                      <th>Profissão</th>
                      <th>Telefone</th>
                      <th>Status</th>
                      <th>Ação</th>
                    </tr>
                  </thead>
                  <tbody>
                    {Clientes.map((cliente) => (
                      <tr key={cliente.id}>
                        <td>{cliente.id}</td>
                        <td>{cliente.nome}</td>
                        <td>{cliente.email}</td>
                        <td>{cliente.profissao}</td>
                        <td>{cliente.telefone}</td>
                        <td>Status</td>
                        <td>
                          <button className="btn btn-primary me-1">Editar</button>
                          <button className="btn btn-danger">Excluir</button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
            <Modal show={show} onHide={handleClose}>
              <Modal.Header closeButton>
                <h1 class="modal-title fs-5" id="exampleModalLabel1">Invite Employee</h1>
              </Modal.Header>
              <Modal.Body>
                <div class="row">
                  <div class="col-xl-12">
                    <label class="form-label">Email ID
                      <span class="text-danger">*</span></label>
                    <input type="email" class="form-control" placeholder="hello@gmail.com" />
                    <label class="form-label mt-3">Employment date<span class="text-danger">*</span></label>
                    <div class="react-datepicker-wrapper"><div class="react-datepicker__input-container ">
                      <span role="alert" aria-live="polite" class="react-datepicker__aria-live"></span>
                      <input type="text" class="form-control" value="07/04/2024" />
                    </div>
                    </div>
                    <div class="row">
                      <div class="col-xl-6">
                        <label class="form-label mt-3">First Name<span class="text-danger">*</span>
                        </label><div class="input-group"><input type="text" class="form-control" placeholder="Name" />
                        </div></div><div class="col-xl-6"><label class="form-label mt-3">Last Name
                          <span class="text-danger">*</span></label><div class="input-group">
                          <input type="text" class="form-control" placeholder="Surname" /></div>
                      </div></div><div class="mt-3 invite"><label class="form-label">Send invitation email
                        <span class="text-danger">*</span></label>
                      <input type="email" class="form-control " placeholder="+ invite" /></div></div>
                </div>
              </Modal.Body>
              <Modal.Footer>
                <Button variant="secondary" onClick={handleClose}>
                  Close
                </Button>
                <Button variant="primary" onClick={handleClose}>
                  Save Changes
                </Button>
              </Modal.Footer>
            </Modal>

          </div>
        </div >
      </div >
    </div >
  );
};

export default ListarClientes;

// Arquivo utils/datatables.js

import $ from 'jquery';
import 'datatables.net';
import 'datatables.net-bs5/js/dataTables.bootstrap5.min.js';
import 'datatables.net-bs5/css/dataTables.bootstrap5.min.css';
import "../assets/css/style.css"
export function initDataTable(tableRef) {
    $(tableRef.current).DataTable({
        paging: true,
        searching: true,
        ordering: true,
        lengthMenu: [10, 25, 50, 100],
        pagingType: 'simple_numbers',
        dom: `
          <'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>
          <'row'<'col-sm-12'tr>>
          <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>
        `,
        language: {
            lengthMenu: 'Show _MENU_ entries',
            search: 'Search:',

            paginate: {
                previous: '<', 
                next: '>', 
            },
            paginateButton: '%d', 

        },
    });
}

export function destroyDataTable(tableRef) {
    $(tableRef.current).DataTable().destroy(true);
}
