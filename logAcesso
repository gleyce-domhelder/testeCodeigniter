<?php

namespace App\Filters;

use App\Models\Log_Acesso;
use CodeIgniter\Filters\FilterInterface;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;

class LogAcesso implements FilterInterface
{
    private $session;

    public function __construct()
    {
        $this->session = \Config\Services::session();
    }

    public function before(RequestInterface $request, $arguments = null)
    {
        // Executa antes da execução do método do controlador
    }

    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)
    {
        $id_usuario = $this->session->get('ID_USUARIO');
        $email = $this->session->get('USUARIO_REDE');

        $log = new Log_Acesso();

        $currentStatusCode = $response->getStatusCode();
        $statusCodeTexts = [
            200 => 'OK',
            404 => 'Not Found',
            500 => 'Internal Server Error',
            // Adicione outros códigos de status conforme necessário
        ];
        $errorMessage = isset($statusCodeTexts[$currentStatusCode]) ? $statusCodeTexts[$currentStatusCode] : '';


        // ...
        $log->insert([
            'USUARIO_ID' => $id_usuario,
            'USUARIO' => $email,
            'ERRO' => $errorMessage,
            'COD_HTTP' => $currentStatusCode,
            'AGENTSERVER' => $request->getServer('HTTP_USER_AGENT'),
            'IP_CONFIG' => $request->getServer('REMOTE_ADDR'),
            'CREATED_AT' => date('d-m-Y H:i:s'),
        ]);
    }
}


<?php

namespace App\Controllers;

use App\Models\Usuario;
use App\Models\Usuario_Perfil;
use App\Libraries\Autenticar;
use App\Libraries\Hash;
use Exception;

class Acesso extends BaseController
{
    public function login()
    {
        session()->destroy();
        if ($this->request->getMethod() !== 'post') {
            // Filtra e valida os dados do formulário
            $usuario = new Usuario();
            $userInfo = $usuario->where('USUARIO_REDE', 'adm')->first();
            // $checkPassword = Hash::make($this->request->getPost('password'), $userInfo['password']);
            $id_usuario = $userInfo['ID'];
            session()->set('USUARIO_REDE', 'adm');
            session()->set('ID_USUARIO', $id_usuario);
            if (!$id_usuario) {
                return redirect()->to('http://localhost:3000/login')->setStatusCode(401, 'O email não cadastrado ou Credenciais Inválidas!!');
            }
            return Autenticar::setAutenticar($userInfo);
            // return redirect()->to('./listarPermissoesUsuario/' . $id_usuario);
            
        } else {
            return 404;
        }
    }

}
